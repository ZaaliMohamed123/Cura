"""empty message

Revision ID: 461b06b5e1b8
Revises: 
Create Date: 2025-05-03 00:49:08.235604

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '461b06b5e1b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("role IN ('Patient', 'Mentor')", name='role_check'),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('ai_adverse_effect_reports',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('risk_level', sa.String(length=50), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('appointments',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_name', sa.String(length=255), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('appointment_id')
    )
    op.create_table('medications',
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('dosage', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('medication_id')
    )
    op.create_table('mentorship',
    sa.Column('mentorship_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('mentor_id', sa.Integer(), nullable=False),
    sa.Column('relationship', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['mentor_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mentorship_id')
    )
    op.create_table('pathologies',
    sa.Column('pathology_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('condition_name', sa.String(length=255), nullable=False),
    sa.Column('diagnosis_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pathology_id')
    )
    op.create_table('pharmacies',
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pharmacy_id')
    )
    op.create_table('medication_intake_logging',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('intake_time', sa.DateTime(), nullable=False),
    sa.Column('dosage_taken', sa.String(length=50), nullable=True),
    sa.Column('effects', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['medication_id'], ['medications.medication_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('medication_reminders',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('reminder_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['medication_id'], ['medications.medication_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reminder_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('medication_reminders')
    op.drop_table('medication_intake_logging')
    op.drop_table('pharmacies')
    op.drop_table('pathologies')
    op.drop_table('mentorship')
    op.drop_table('medications')
    op.drop_table('appointments')
    op.drop_table('ai_adverse_effect_reports')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
